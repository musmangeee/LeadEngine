version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - pip install --upgrade awscli==1.18.26 ### Here is my update - and it works
      - aws --version
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 928364608251.dkr.ecr.us-east-1.amazonaws.com/dev-lead-engine_php-fpm
        # Copy "RepositoryURI" from output of CloudFormation Stack "laravel-ecr"
      - REPOSITORY_URI_PHPWORKER=928364608251.dkr.ecr.us-east-1.amazonaws.com/dev-lead-engine_phpworker
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - printenv
      - echo -n "$CODEBUILD_LOG_PATH" > /tmp/build_id.out
        #- printf "%s:%s" "$REPOSITORY_URI_NGINX" "$(cat /tmp/build_id.out)" > /tmp/build_tag_nginx.out
        #- printf "%s:%s" "$REPOSITORY_URI_PHPFPM" "$(cat /tmp/build_id.out)" > /tmp/build_tag_phpfpm.out
      - printf '{"tag":"%s"}' "$(cat /tmp/build_id.out)" > /tmp/build.json
      #- echo Retrieve app config from Amazon S3...
      # This file is copied to S3 using the "docker/push-config-s3.sh" script
      # Adjust S3 bucket name and path as necessary
      - aws s3 cp s3://aim-env-files/aim-lead-engine/project/env.staging .env
      - echo APP_VERSION=$CODEBUILD_RESOLVED_SOURCE_VERSION >> .env
  build:
    commands:
      - echo Composer Install
      - composer install
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI_PHPWORKER:$IMAGE_TAG -f Dockerfile-phpworker-ecs .
      - docker tag $REPOSITORY_URI_PHPWORKER:$IMAGE_TAG $REPOSITORY_URI_PHPWORKER:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI_PHPWORKER:$IMAGE_TAG
      - docker push $REPOSITORY_URI_PHPWORKER:latest
      - echo Writing image definitions file...
      - IMAGE_DIFINITION_PHPWORKER="{\"name\":\"php-worker\",\"imageUri\":\"${REPOSITORY_URI_PHPWORKER}:${IMAGE_TAG}\"}"
      - echo "[${IMAGE_DIFINITION_PHPWORKER}]" > imagedefinitions.json
artifacts:
  files: imagedefinitions.json
  discard-paths: yes

